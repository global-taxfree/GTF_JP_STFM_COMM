//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.18444
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GTF_Printer.Properties {
    using System;
    
    
    /// <summary>
    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
    /// </summary>
    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
    // 클래스에서 자동으로 생성되었습니다.
    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여 ResGen을
    // 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceLandingPort {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceLandingPort() {
        }
        
        /// <summary>
        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GTF_Printer.Properties.ResourceLandingPort", typeof(ResourceLandingPort).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대한 현재 스레드의 CurrentUICulture
        ///   속성을 재정의합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   稚内港フェリーターミナル과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort01 {
            get {
                return ResourceManager.GetString("StringLandingPort01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   神戸ポートターミナル과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort02 {
            get {
                return ResourceManager.GetString("StringLandingPort02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   大阪国際フェリーターミナル과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort03 {
            get {
                return ResourceManager.GetString("StringLandingPort03", resourceCulture);
            }
        }
        
        /// <summary>
        ///   下関港国際ターミナル과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort04 {
            get {
                return ResourceManager.GetString("StringLandingPort04", resourceCulture);
            }
        }
        
        /// <summary>
        ///   博多港国際ターミナル과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort05 {
            get {
                return ResourceManager.GetString("StringLandingPort05", resourceCulture);
            }
        }
        
        /// <summary>
        ///   比田勝港国際ターミナル과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort06 {
            get {
                return ResourceManager.GetString("StringLandingPort06", resourceCulture);
            }
        }
        
        /// <summary>
        ///   旭川空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort07 {
            get {
                return ResourceManager.GetString("StringLandingPort07", resourceCulture);
            }
        }
        
        /// <summary>
        ///   函館空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort08 {
            get {
                return ResourceManager.GetString("StringLandingPort08", resourceCulture);
            }
        }
        
        /// <summary>
        ///   新千歳空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort09 {
            get {
                return ResourceManager.GetString("StringLandingPort09", resourceCulture);
            }
        }
        
        /// <summary>
        ///   青森空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort10 {
            get {
                return ResourceManager.GetString("StringLandingPort10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   秋田空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort11 {
            get {
                return ResourceManager.GetString("StringLandingPort11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   仙台空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort12 {
            get {
                return ResourceManager.GetString("StringLandingPort12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   福島空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort13 {
            get {
                return ResourceManager.GetString("StringLandingPort13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   茨城空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort14 {
            get {
                return ResourceManager.GetString("StringLandingPort14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   成田国際空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort15 {
            get {
                return ResourceManager.GetString("StringLandingPort15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   羽田空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort16 {
            get {
                return ResourceManager.GetString("StringLandingPort16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   新潟空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort17 {
            get {
                return ResourceManager.GetString("StringLandingPort17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   富山空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort18 {
            get {
                return ResourceManager.GetString("StringLandingPort18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   小松空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort19 {
            get {
                return ResourceManager.GetString("StringLandingPort19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   中部国際空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort20 {
            get {
                return ResourceManager.GetString("StringLandingPort20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   富士山静岡空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort21 {
            get {
                return ResourceManager.GetString("StringLandingPort21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   大阪国際空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort22 {
            get {
                return ResourceManager.GetString("StringLandingPort22", resourceCulture);
            }
        }
        
        /// <summary>
        ///   関西国際空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort23 {
            get {
                return ResourceManager.GetString("StringLandingPort23", resourceCulture);
            }
        }
        
        /// <summary>
        ///   米子空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort24 {
            get {
                return ResourceManager.GetString("StringLandingPort24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   岡山空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort25 {
            get {
                return ResourceManager.GetString("StringLandingPort25", resourceCulture);
            }
        }
        
        /// <summary>
        ///   広島空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort26 {
            get {
                return ResourceManager.GetString("StringLandingPort26", resourceCulture);
            }
        }
        
        /// <summary>
        ///   北九州空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort27 {
            get {
                return ResourceManager.GetString("StringLandingPort27", resourceCulture);
            }
        }
        
        /// <summary>
        ///   福岡空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort28 {
            get {
                return ResourceManager.GetString("StringLandingPort28", resourceCulture);
            }
        }
        
        /// <summary>
        ///   佐賀空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort29 {
            get {
                return ResourceManager.GetString("StringLandingPort29", resourceCulture);
            }
        }
        
        /// <summary>
        ///   熊本空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort30 {
            get {
                return ResourceManager.GetString("StringLandingPort30", resourceCulture);
            }
        }
        
        /// <summary>
        ///   大分空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort31 {
            get {
                return ResourceManager.GetString("StringLandingPort31", resourceCulture);
            }
        }
        
        /// <summary>
        ///   宮崎空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort32 {
            get {
                return ResourceManager.GetString("StringLandingPort32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   長崎空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort33 {
            get {
                return ResourceManager.GetString("StringLandingPort33", resourceCulture);
            }
        }
        
        /// <summary>
        ///   鹿児島空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort34 {
            get {
                return ResourceManager.GetString("StringLandingPort34", resourceCulture);
            }
        }
        
        /// <summary>
        ///   那覇空港과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string StringLandingPort35 {
            get {
                return ResourceManager.GetString("StringLandingPort35", resourceCulture);
            }
        }
    }
}
